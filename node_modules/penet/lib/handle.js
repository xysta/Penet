var Handlebars = require("handlebars");

/**
 *
 * @constructor
 */
var HandleCollection = function(){

    this["HEAD"] = {};
    this["GET"] = {};
    this["POST"] = {};
    this["PUT"] = {};
    this["DELETE"] = {};

}

/**
 * PENET - Handle
 *
 *  field:
 *      attrs - when you want to send an message to your user, you can use it.
 *      incomingMessage - just request, but nodejs has renamed it as 'IncomingMessage'
 *      static_dir - i think you will understand
 *      response - i belive you have understand
 *      template - if you need a template
 *
 *  function:
 *      renderTEXT - what the response header is "plain/text"
 *      renderHTML - so, as above but "text/html"
 *      renderJSON - "application/json
 *      render -
 *
 * @param instance
 * @constructor
 */
var Handle = function(instance){

    instance = instance || {};

    this.attrs = {};

    this.renderTEXT = function(text){
        this.response.setHeader("Content-Type", "plain/text");
        this.response.write(text? text: JSON.stringify(this.attrs));
        return this.end();
    };

    this.renderJSON = function(json){
        this.response.setHeader("Content-Type", "application/json");
        this.response.write(json? json: JSON.stringify(this.attrs));
        return this.response.end();
    };

    this.renderHTML = function(html){
        this.response.setHeader("Content-Type", "text/html");
        this.response.write(html? html: Handlebars.compile(this.template)(this.attrs));
        return this.response.end();
    };

    this.render = function(){
        if(this.template){
            return this.renderHTML();
        }else{
            return this.renderJSON();
        }
    };

    for(var key in instance){
        this[key]  = instance[key];
    }
}
/**
 * PENET - handle
 *  Class:
 *      Handle - handle every request which has some requestData be required
 *      HandleCollection - A container of Handle
 * @type {
 *          {
 *              Handle: Function,
 *              HandleCollection: Function
 *          }
 *       }
 */
module.exports = {
    Handle: Handle,
    HandleCollection: HandleCollection
}