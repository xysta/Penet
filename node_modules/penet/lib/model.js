var Handlebars = require("handlebars");

/**
 *
 * @constructor
 */
var ModelCollection = function(){

    this["HEAD"] = {};
    this["GET"] = {};
    this["POST"] = {};
    this["PUT"] = {};
    this["DELETE"] = {};

}

/**
 *
 * @param instance
 * @constructor
 */
var Model = function(instance){

    instance = instance || {};

    this.attrs = {};

    /**
     *
     * @param text
     * @returns {end()}
     */
    this.renderTEXT = function(text){
        this.response.setHeader("Content-Type", "plain/text");
        this.response.write(text? text: JSON.stringify(this.attrs));
        return this.end();
    };

    /**
     *
     * @param json
     * @returns {end()}
     */
    this.renderJSON = function(json){
        this.response.setHeader("Content-Type", "application/json");
        this.response.write(json? json: JSON.stringify(this.attrs));
        return this.response.end();
    };

    /**
     *
     * @param html
     * @returns {end()}
     */
    this.renderHTML = function(html){
        this.response.setHeader("Content-Type", "text/html");
        this.response.write(html? html: Handlebars.compile(this.template)(this.attrs));
        return this.response.end();
    };

    /**
     *
     * @returns {end()}
     */
    this.render = function(){
        if(this.template){
            return this.renderHTML();
        }else{
            return this.renderJSON();
        }
    };

    /**
     * clone istance to the new object
     */
    for(var key in instance){
        this[key]  = instance[key];
    }
}


/**
 *
 * @type {{Model: Function, ModelCollection: Function}}
 */
module.exports = {
    Model:Model,
    ModelCollection: ModelCollection
}