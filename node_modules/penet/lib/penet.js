var http = require("http"),
    fs   = require("fs"),
    util = require("./util"),
    url  = require("url"),
    core = require("./core"),
    Handle = require('./handle').Handle,
    HandleCollection = require("./handle").HandleCollection,
    doMessage = core.doMessage;



var Penet  = function(options){

    this.VERSION = "0.0.1";

    this.encoding = "UTF-8";

    this.handles = new HandleCollection();

    this.addHandle = function(method, handleName ,handle){
        this.handles[method][handleName] = handle;
    };

    this.static = function(dir){
        this.static_dir = dir;
    };

};

Penet.prototype.start =  function(port){
    var me = this;
    var server = http.createServer(function(incomingMessage, response){
        doMessage(incomingMessage,function(params){

            fs.readFile(me.static_dir + url.parse(incomingMessage.url).pathname, {
                encoding: me.encoding
            },function(err, data){
                var template = null;
                try{
                    template = new Buffer(data).toString(me.encoding);
                }catch (err){

                }

                if(params.handle && params.method){
                    var handle = new Handle(me.handles[incomingMessage.method][params.handle]);

                    handle.incomingMessage = incomingMessage;
                    handle.static_dir = me.static_dir;
                    handle.response = response;
                    handle.template = template;

                    return handle[params.method]();
                }else if(template){
                    response.writeHead(200,{ 'Content-Type': "text/html"});
                    response.write(template,me.encoding);
                    response.end();
                }else{

                }
            });
        });
    });
    if(!port) port = 3000;
    server.listen(port);
};

module.exports = Penet;

