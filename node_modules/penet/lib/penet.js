var http = require("http"),
    fs   = require("fs"),
    util = require("./util"),
    url  = require("url"),
    core = require("./core"),
    Model = require('./model').Model,
    ModelCollection = require("./model").ModelCollection,
    doMessage = core.doMessage;



var Penet  = function(options){

    this.VERSION = "0.0.1";

    this.encoding = "UTF-8";

    this.models = new ModelCollection();

    this.addModel = function(method, modelName ,model){
        this.models[method][modelName] = model;
    };

    this.static = function(dir){
        this.static_dir = dir;
    };

};

Penet.prototype.start =  function(port){
    var me = this;
    var server = http.createServer(function(incomingMessage, response){
        doMessage(incomingMessage,function(params){

            fs.readFile(me.static_dir + url.parse(incomingMessage.url).pathname, {
                encoding: me.encoding
            },function(err, data){
                var template = null;
                try{
                    template = new Buffer(data).toString(me.encoding);
                }catch (err){

                }

                if(params.model && params.fn){
                    var model = new Model(me.models[incomingMessage.method][params.model]);

                    model.incomingMessage = incomingMessage;
                    model.static_dir = me.static_dir;
                    model.response = response;
                    model.template = template;

                    return model[params.fn]();
                }else if(template){
                    response.writeHead(200,{ 'Content-Type': "text/html"});
                    response.write(template,me.encoding);
                    response.end();
                }else{

                }
            });
        });
    });
    if(!port) port = 3000;
    server.listen(port);
};

module.exports = Penet;

